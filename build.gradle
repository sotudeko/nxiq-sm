import java.text.SimpleDateFormat
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonatype.gradle.plugins.scan' version '1.2.0'
	id "com.palantir.docker" version "0.22.1"
	id "jacoco"
    id "io.freefair.lombok" version "6.3.0"
 }

group = 'org.demo.cs'
sourceCompatibility = '8'

def applicationname = 'nxiq-sm'
def packagedir = "successmetrics-${version}"
def releasedir = "${packagedir}/${packagedir}"
def configdir = "${packagedir}/${packagedir}/config"

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa:2.5.3')
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.h2database:h2:2.0.202'
  	implementation 'org.webjars:jquery:3.5.1'
	implementation 'org.webjars:bootstrap:4.5.0'
	implementation 'org.thymeleaf:thymeleaf:3.0.12.RELEASE'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.20'
	implementation 'org.apache.commons:commons-csv:1.5'
	implementation 'com.opencsv:opencsv:5.2'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.json:json:20210307'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
	testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
	testImplementation("com.approvaltests:approvaltests:12.4.1")
}

nexusIQScan {
  username = 'admin'
  password = 'admin123'
  serverUrl = 'http://localhost:8070'
  applicationId = 'successmetrics'
  stage = 'build'
  allConfigurations = true
}

//test {
//	useJUnitPlatform()
//    finalizedBy jacocoTestReport // report is always generated after tests run
//	testLogging {
//		events "passed", "skipped", "failed"
//	}
//}
//
//jacocoTestReport {
//	reports{
//		xml.enabled true
//        csv.enabled true
//	}
//    dependsOn test // tests are required to run before generating the report
//}

clean.doFirst {
	delete "${packagedir}"
	delete "${packagedir}.zip"
}

build.doFirst {
	mkdir "${packagedir}"
	mkdir "${releasedir}"
}

task copydependencies(type: Copy) {
  from configurations.default
  into 'build/dependencies'
}

task packagejar (type: Copy) {
  from 'build/libs'
	include "successmetrics-${version}.jar"
  into "${releasedir}"
}

task packagefiles (type: Copy) {
	from 'releasefiles'
	include 'config/'
	include 'runapp*'
	into "${releasedir}"
	filter(ReplaceTokens, tokens: [APPVER: project.version])
}

task copyconfig (type: Copy) {
	from 'src/main/resources'
	include "application.properties"
	into "${configdir}"
}

task release(type: Zip) {
	from "${packagedir}"
	archiveName "${packagedir}.zip"
	destinationDir(file(projectDir))
}

docker {
     name "${applicationname}:${project.version}"
     files "${projectDir}/build/libs/successmetrics-*.jar"
}

packagejar.dependsOn bootJar
packagefiles.dependsOn packagejar
copyconfig.dependsOn packagefiles
release.dependsOn copyconfig
